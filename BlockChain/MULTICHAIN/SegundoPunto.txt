// SPDX-License-Identifier: GPL-3.0
// versión de solidity
pragma solidity >=0.8.0;

//Dudas: ¿los codigos de propuesta deben ser unicos?

contract Punto2 {
    //Declaracion de variables
    address private presidente; //El address del que creo el contrato

    //Se crea la estructura propuesta
    struc propuesta{
        uint codigoPropuesta;
        string textoPropuesta;
        uint cantidadOpciones;
        uint costoVoto;
        uint tiempoVoto;
    }
    propuesta[] public propuestas; //Se crea el arreglo de la estructura propuesta


    constructor() public payable{
        presidente = msg.sender; //Establece el presidente del contrato
    }

    function crearPropuesta(uint codigoPropuesta,string textoPropuesta,uint cantidadOpciones,uint costoVoto,uint tiempoVoto){

        //Controlar la cantidad de opciones (cantidadOpciones), 2 <= longitud de propuestas[] <= 10
        if(cantidadOpciones < 2){
            return "Error, cantidad de Opciones es menor a dos";
        }
        if(cantidadOpciones > 10){
            return "Error, cantidad de Opciones es mayor a diez";
        }

        //Controlar el costo de votar (costoVoto), 1 <= costoVoto <= 5
        if(costoVoto < 1){
            return "Error, el costo de voto es menor a 1 Etherium";
        }
        if(costoVoto > 5){
            return "Error, el costo de voto es mayor a 5 Etherium";
        }

        //Controlar el timepo de votacion (tiempoVoto), tiempoVoto > 120
        if(tiempoVoto < 120){
            return "Error, el tiempo de voto es menor a 120 segundos";
        }

        //Controlar la cantidad de propuestas, 1 <= longitud de propuestas[] <= 3
        if(propuestas.length > 3){
            return "Error, se alcanzo el limite de 3 propuestas"
        }

        propuestas.push(propuesta(codigoPropuesta, textoPropuesta, cantidadOpciones, costoVoto, tiempoVoto))
    }


}